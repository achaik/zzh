{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"网盘直链下载助手","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["baidu.com","baidupcs.com","aliyundrive.com","189.cn","xunlei.com","quark.cn","youxiaohou.com","yun.139.com","caiyun.139.com","localhost","*"],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/disk/main*","*://yun.baidu.com/disk/main*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/*","*://yun.baidu.com/share/*","*://www.aliyundrive.com/s/*","*://www.aliyundrive.com/drive*","*://cloud.189.cn/web/*","*://pan.xunlei.com/*","*://pan.quark.cn/*","*://yun.139.com/*","*://caiyun.139.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1670681491038,"data":{"scode":"s","setting_init_code":"s80149","setting_rpc_dir":"sD:","setting_rpc_domain":"shttp://localhost","setting_rpc_path":"s/jsonrpc","setting_rpc_port":"s16800","setting_rpc_token":"s","setting_terminal_type":"swc","setting_theme_color":"s#09AAFF"}},"enabled":true,"position":1,"file_url":"https://www.youxiaohou.com/panlinker.user.js","uuid":"0a4375e4-690c-44b8-8547-a783563432ee","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://unpkg.com/jquery@3.6.0/dist/jquery.min.js","ts":1670681491008,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"sweetalert2.all.min.js","url":"https://unpkg.com/sweetalert2@10.16.6/dist/sweetalert2.all.min.js","ts":1670681491011,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"md5.min.js","url":"https://unpkg.com/js-md5@0.7.3/build/md5.min.js","ts":1670681491012,"mimetype":"text/javascript"},"source":""}]},{"name":"🔥持续更新🔥 CSDN广告完全过滤、人性化脚本优化：🆕 不用再登录了！让你体验令人惊喜的崭新CSDN。","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["www.csdn.net"],"orig_excludes":[],"orig_includes":["*://*.csdn.net/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1670681491071,"data":{}},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/378351-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0-csdn%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4-%E4%BA%BA%E6%80%A7%E5%8C%96%E8%84%9A%E6%9C%AC%E4%BC%98%E5%8C%96-%E4%B8%8D%E7%94%A8%E5%86%8D%E7%99%BB%E5%BD%95%E4%BA%86-%E8%AE%A9%E4%BD%A0%E4%BD%93%E9%AA%8C%E4%BB%A4%E4%BA%BA%E6%83%8A%E5%96%9C%E7%9A%84%E5%B4%AD%E6%96%B0csdn/code/%F0%9F%94%A5%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%F0%9F%94%A5%20CSDN%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4%E3%80%81%E4%BA%BA%E6%80%A7%E5%8C%96%E8%84%9A%E6%9C%AC%E4%BC%98%E5%8C%96%EF%BC%9A%F0%9F%86%95%20%E4%B8%8D%E7%94%A8%E5%86%8D%E7%99%BB%E5%BD%95%E4%BA%86%EF%BC%81%E8%AE%A9%E4%BD%A0%E4%BD%93%E9%AA%8C%E4%BB%A4%E4%BA%BA%E6%83%8A%E5%96%9C%E7%9A%84%E5%B4%AD%E6%96%B0CSDN%E3%80%82.user.js","uuid":"3b124512-56dd-4aa9-ac68-43df220ef56f","source":"","requires":[{"meta":{"name":"jquery.cookie.js","url":"https://cdn.bootcdn.net/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js","ts":1670681491056,"mimetype":"text/javascript"},"source":"LyohCiogalF1ZXJ5IENvb2tpZSBQbHVnaW4gdjEuNC4xCiogaHR0cHM6Ly9naXRodWIuY29tL2NhcmhhcnRsL2pxdWVyeS1jb29raWUKKgoqIENvcHlyaWdodCAyMDEzIEtsYXVzIEhhcnRsCiogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlCiovKGZ1bmN0aW9uKGZhY3Rvcnkpe2lmKHR5cGVvZiBkZWZpbmU9PT0nZnVuY3Rpb24nJiZkZWZpbmUuYW1kKXtkZWZpbmUoWydqcXVlcnknXSxmYWN0b3J5KTt9ZWxzZSBpZih0eXBlb2YgZXhwb3J0cz09PSdvYmplY3QnKXtmYWN0b3J5KHJlcXVpcmUoJ2pxdWVyeScpKTt9ZWxzZXtmYWN0b3J5KGpRdWVyeSk7fX0oZnVuY3Rpb24oJCl7dmFyIHBsdXNlcz0vXCsvZztmdW5jdGlvbiBlbmNvZGUocyl7cmV0dXJuIGNvbmZpZy5yYXc/czplbmNvZGVVUklDb21wb25lbnQocyk7fQpmdW5jdGlvbiBkZWNvZGUocyl7cmV0dXJuIGNvbmZpZy5yYXc/czpkZWNvZGVVUklDb21wb25lbnQocyk7fQpmdW5jdGlvbiBzdHJpbmdpZnlDb29raWVWYWx1ZSh2YWx1ZSl7cmV0dXJuIGVuY29kZShjb25maWcuanNvbj9KU09OLnN0cmluZ2lmeSh2YWx1ZSk6U3RyaW5nKHZhbHVlKSk7fQpmdW5jdGlvbiBwYXJzZUNvb2tpZVZhbHVlKHMpe2lmKHMuaW5kZXhPZignIicpPT09MCl7cz1zLnNsaWNlKDEsLTEpLnJlcGxhY2UoL1xcIi9nLCciJykucmVwbGFjZSgvXFxcXC9nLCdcXCcpO30KdHJ5e3M9ZGVjb2RlVVJJQ29tcG9uZW50KHMucmVwbGFjZShwbHVzZXMsJyAnKSk7cmV0dXJuIGNvbmZpZy5qc29uP0pTT04ucGFyc2Uocyk6czt9Y2F0Y2goZSl7fX0KZnVuY3Rpb24gcmVhZChzLGNvbnZlcnRlcil7dmFyIHZhbHVlPWNvbmZpZy5yYXc/czpwYXJzZUNvb2tpZVZhbHVlKHMpO3JldHVybiAkLmlzRnVuY3Rpb24oY29udmVydGVyKT9jb252ZXJ0ZXIodmFsdWUpOnZhbHVlO30KdmFyIGNvbmZpZz0kLmNvb2tpZT1mdW5jdGlvbihrZXksdmFsdWUsb3B0aW9ucyl7aWYodmFsdWUhPT11bmRlZmluZWQmJiEkLmlzRnVuY3Rpb24odmFsdWUpKXtvcHRpb25zPSQuZXh0ZW5kKHt9LGNvbmZpZy5kZWZhdWx0cyxvcHRpb25zKTtpZih0eXBlb2Ygb3B0aW9ucy5leHBpcmVzPT09J251bWJlcicpe3ZhciBkYXlzPW9wdGlvbnMuZXhwaXJlcyx0PW9wdGlvbnMuZXhwaXJlcz1uZXcgRGF0ZSgpO3Quc2V0VGltZSgrdCtkYXlzKjg2NGUrNSk7fQpyZXR1cm4oZG9jdW1lbnQuY29va2llPVtlbmNvZGUoa2V5KSwnPScsc3RyaW5naWZ5Q29va2llVmFsdWUodmFsdWUpLG9wdGlvbnMuZXhwaXJlcz8nOyBleHBpcmVzPScrb3B0aW9ucy5leHBpcmVzLnRvVVRDU3RyaW5nKCk6Jycsb3B0aW9ucy5wYXRoPyc7IHBhdGg9JytvcHRpb25zLnBhdGg6Jycsb3B0aW9ucy5kb21haW4/JzsgZG9tYWluPScrb3B0aW9ucy5kb21haW46Jycsb3B0aW9ucy5zZWN1cmU/Jzsgc2VjdXJlJzonJ10uam9pbignJykpO30KdmFyIHJlc3VsdD1rZXk/dW5kZWZpbmVkOnt9O3ZhciBjb29raWVzPWRvY3VtZW50LmNvb2tpZT9kb2N1bWVudC5jb29raWUuc3BsaXQoJzsgJyk6W107Zm9yKHZhciBpPTAsbD1jb29raWVzLmxlbmd0aDtpPGw7aSsrKXt2YXIgcGFydHM9Y29va2llc1tpXS5zcGxpdCgnPScpO3ZhciBuYW1lPWRlY29kZShwYXJ0cy5zaGlmdCgpKTt2YXIgY29va2llPXBhcnRzLmpvaW4oJz0nKTtpZihrZXkmJmtleT09PW5hbWUpe3Jlc3VsdD1yZWFkKGNvb2tpZSx2YWx1ZSk7YnJlYWs7fQppZigha2V5JiYoY29va2llPXJlYWQoY29va2llKSkhPT11bmRlZmluZWQpe3Jlc3VsdFtuYW1lXT1jb29raWU7fX0KcmV0dXJuIHJlc3VsdDt9O2NvbmZpZy5kZWZhdWx0cz17fTskLnJlbW92ZUNvb2tpZT1mdW5jdGlvbihrZXksb3B0aW9ucyl7aWYoJC5jb29raWUoa2V5KT09PXVuZGVmaW5lZCl7cmV0dXJuIGZhbHNlO30KJC5jb29raWUoa2V5LCcnLCQuZXh0ZW5kKHt9LG9wdGlvbnMse2V4cGlyZXM6LTF9KSk7cmV0dXJuISQuY29va2llKGtleSk7fTt9KSk7"},{"meta":{"name":"nprogress.js","url":"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.js","ts":1670681491057,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"clipboard.min.js","url":"https://cdn.bootcdn.net/ajax/libs/clipboard.js/2.0.8/clipboard.min.js","ts":1670681491060,"mimetype":"text/javascript"},"source":"LyohCiAqIGNsaXBib2FyZC5qcyB2Mi4wLjgKICogaHR0cHM6Ly9jbGlwYm9hcmRqcy5jb20vCiAqCiAqIExpY2Vuc2VkIE1JVCDCqSBaZW5vIFJvY2hhCiAqLwohZnVuY3Rpb24odCxlKXsib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHMmJiJvYmplY3QiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKToiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXSxlKToib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5DbGlwYm9hcmRKUz1lKCk6dC5DbGlwYm9hcmRKUz1lKCl9KHRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gbj17MTM0OmZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7bi5kKGUse2RlZmF1bHQ6ZnVuY3Rpb24oKXtyZXR1cm4gcn19KTt2YXIgZT1uKDI3OSksaT1uLm4oZSksZT1uKDM3MCksYT1uLm4oZSksZT1uKDgxNyksbz1uLm4oZSk7ZnVuY3Rpb24gYyh0KXtyZXR1cm4oYz0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiYiZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIHUodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZVtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCwidmFsdWUiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LHIua2V5LHIpfX12YXIgbD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7IWZ1bmN0aW9uKHQpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfSh0aGlzKSx0aGlzLnJlc29sdmVPcHRpb25zKHQpLHRoaXMuaW5pdFNlbGVjdGlvbigpfXZhciB0LG4scjtyZXR1cm4gdD1lLChuPVt7a2V5OiJyZXNvbHZlT3B0aW9ucyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD0wPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e307dGhpcy5hY3Rpb249dC5hY3Rpb24sdGhpcy5jb250YWluZXI9dC5jb250YWluZXIsdGhpcy5lbWl0dGVyPXQuZW1pdHRlcix0aGlzLnRhcmdldD10LnRhcmdldCx0aGlzLnRleHQ9dC50ZXh0LHRoaXMudHJpZ2dlcj10LnRyaWdnZXIsdGhpcy5zZWxlY3RlZFRleHQ9IiJ9fSx7a2V5OiJpbml0U2VsZWN0aW9uIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMudGV4dD90aGlzLnNlbGVjdEZha2UoKTp0aGlzLnRhcmdldCYmdGhpcy5zZWxlY3RUYXJnZXQoKX19LHtrZXk6ImNyZWF0ZUZha2VFbGVtZW50Iix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PSJydGwiPT09ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEF0dHJpYnV0ZSgiZGlyIik7dGhpcy5mYWtlRWxlbT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZXh0YXJlYSIpLHRoaXMuZmFrZUVsZW0uc3R5bGUuZm9udFNpemU9IjEycHQiLHRoaXMuZmFrZUVsZW0uc3R5bGUuYm9yZGVyPSIwIix0aGlzLmZha2VFbGVtLnN0eWxlLnBhZGRpbmc9IjAiLHRoaXMuZmFrZUVsZW0uc3R5bGUubWFyZ2luPSIwIix0aGlzLmZha2VFbGVtLnN0eWxlLnBvc2l0aW9uPSJhYnNvbHV0ZSIsdGhpcy5mYWtlRWxlbS5zdHlsZVt0PyJyaWdodCI6ImxlZnQiXT0iLTk5OTlweCI7dD13aW5kb3cucGFnZVlPZmZzZXR8fGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3A7cmV0dXJuIHRoaXMuZmFrZUVsZW0uc3R5bGUudG9wPSIiLmNvbmNhdCh0LCJweCIpLHRoaXMuZmFrZUVsZW0uc2V0QXR0cmlidXRlKCJyZWFkb25seSIsIiIpLHRoaXMuZmFrZUVsZW0udmFsdWU9dGhpcy50ZXh0LHRoaXMuZmFrZUVsZW19fSx7a2V5OiJzZWxlY3RGYWtlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10aGlzLmNyZWF0ZUZha2VFbGVtZW50KCk7dGhpcy5mYWtlSGFuZGxlckNhbGxiYWNrPWZ1bmN0aW9uKCl7cmV0dXJuIHQucmVtb3ZlRmFrZSgpfSx0aGlzLmZha2VIYW5kbGVyPXRoaXMuY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIix0aGlzLmZha2VIYW5kbGVyQ2FsbGJhY2spfHwhMCx0aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZChlKSx0aGlzLnNlbGVjdGVkVGV4dD1vKCkoZSksdGhpcy5jb3B5VGV4dCgpLHRoaXMucmVtb3ZlRmFrZSgpfX0se2tleToicmVtb3ZlRmFrZSIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmZha2VIYW5kbGVyJiYodGhpcy5jb250YWluZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2xpY2siLHRoaXMuZmFrZUhhbmRsZXJDYWxsYmFjayksdGhpcy5mYWtlSGFuZGxlcj1udWxsLHRoaXMuZmFrZUhhbmRsZXJDYWxsYmFjaz1udWxsKSx0aGlzLmZha2VFbGVtJiYodGhpcy5jb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy5mYWtlRWxlbSksdGhpcy5mYWtlRWxlbT1udWxsKX19LHtrZXk6InNlbGVjdFRhcmdldCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnNlbGVjdGVkVGV4dD1vKCkodGhpcy50YXJnZXQpLHRoaXMuY29weVRleHQoKX19LHtrZXk6ImNvcHlUZXh0Iix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlO3RyeXtlPWRvY3VtZW50LmV4ZWNDb21tYW5kKHRoaXMuYWN0aW9uKX1jYXRjaCh0KXtlPSExfXRoaXMuaGFuZGxlUmVzdWx0KGUpfX0se2tleToiaGFuZGxlUmVzdWx0Iix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLmVtaXR0ZXIuZW1pdCh0PyJzdWNjZXNzIjoiZXJyb3IiLHthY3Rpb246dGhpcy5hY3Rpb24sdGV4dDp0aGlzLnNlbGVjdGVkVGV4dCx0cmlnZ2VyOnRoaXMudHJpZ2dlcixjbGVhclNlbGVjdGlvbjp0aGlzLmNsZWFyU2VsZWN0aW9uLmJpbmQodGhpcyl9KX19LHtrZXk6ImNsZWFyU2VsZWN0aW9uIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMudHJpZ2dlciYmdGhpcy50cmlnZ2VyLmZvY3VzKCksZG9jdW1lbnQuYWN0aXZlRWxlbWVudC5ibHVyKCksd2luZG93LmdldFNlbGVjdGlvbigpLnJlbW92ZUFsbFJhbmdlcygpfX0se2tleToiZGVzdHJveSIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUZha2UoKX19LHtrZXk6ImFjdGlvbiIsc2V0OmZ1bmN0aW9uKCl7dmFyIHQ9MDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOiJjb3B5IjtpZih0aGlzLl9hY3Rpb249dCwiY29weSIhPT10aGlzLl9hY3Rpb24mJiJjdXQiIT09dGhpcy5fYWN0aW9uKXRocm93IG5ldyBFcnJvcignSW52YWxpZCAiYWN0aW9uIiB2YWx1ZSwgdXNlIGVpdGhlciAiY29weSIgb3IgImN1dCInKX0sZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FjdGlvbn19LHtrZXk6InRhcmdldCIsc2V0OmZ1bmN0aW9uKHQpe2lmKHZvaWQgMCE9PXQpe2lmKCF0fHwib2JqZWN0IiE9PWModCl8fDEhPT10Lm5vZGVUeXBlKXRocm93IG5ldyBFcnJvcignSW52YWxpZCAidGFyZ2V0IiB2YWx1ZSwgdXNlIGEgdmFsaWQgRWxlbWVudCcpO2lmKCJjb3B5Ij09PXRoaXMuYWN0aW9uJiZ0Lmhhc0F0dHJpYnV0ZSgiZGlzYWJsZWQiKSl0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgInRhcmdldCIgYXR0cmlidXRlLiBQbGVhc2UgdXNlICJyZWFkb25seSIgaW5zdGVhZCBvZiAiZGlzYWJsZWQiIGF0dHJpYnV0ZScpO2lmKCJjdXQiPT09dGhpcy5hY3Rpb24mJih0Lmhhc0F0dHJpYnV0ZSgicmVhZG9ubHkiKXx8dC5oYXNBdHRyaWJ1dGUoImRpc2FibGVkIikpKXRocm93IG5ldyBFcnJvcignSW52YWxpZCAidGFyZ2V0IiBhdHRyaWJ1dGUuIFlvdSBjYW5cJ3QgY3V0IHRleHQgZnJvbSBlbGVtZW50cyB3aXRoICJyZWFkb25seSIgb3IgImRpc2FibGVkIiBhdHRyaWJ1dGVzJyk7dGhpcy5fdGFyZ2V0PXR9fSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGFyZ2V0fX1dKSYmdSh0LnByb3RvdHlwZSxuKSxyJiZ1KHQsciksZX0oKTtmdW5jdGlvbiBzKHQpe3JldHVybihzPSJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJiJzeW1ib2wiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJiJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOnR5cGVvZiB0fSkodCl9ZnVuY3Rpb24gZih0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcj1lW25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLCJ2YWx1ZSJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsci5rZXkscil9fWZ1bmN0aW9uIGgodCxlKXtyZXR1cm4oaD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0pKHQsZSl9ZnVuY3Rpb24gZChuKXt2YXIgcj1mdW5jdGlvbigpe2lmKCJ1bmRlZmluZWQiPT10eXBlb2YgUmVmbGVjdHx8IVJlZmxlY3QuY29uc3RydWN0KXJldHVybiExO2lmKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pcmV0dXJuITE7aWYoImZ1bmN0aW9uIj09dHlwZW9mIFByb3h5KXJldHVybiEwO3RyeXtyZXR1cm4gRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChEYXRlLFtdLGZ1bmN0aW9uKCl7fSkpLCEwfWNhdGNoKHQpe3JldHVybiExfX0oKTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdCxlPXAobik7cmV0dXJuIHQ9cj8odD1wKHRoaXMpLmNvbnN0cnVjdG9yLFJlZmxlY3QuY29uc3RydWN0KGUsYXJndW1lbnRzLHQpKTplLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxlPXRoaXMsISh0PXQpfHwib2JqZWN0IiE9PXModCkmJiJmdW5jdGlvbiIhPXR5cGVvZiB0P2Z1bmN0aW9uKHQpe2lmKHZvaWQgMCE9PXQpcmV0dXJuIHQ7dGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKX0oZSk6dH19ZnVuY3Rpb24gcCh0KXtyZXR1cm4ocD1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24geSh0LGUpe3Q9ImRhdGEtY2xpcGJvYXJkLSIuY29uY2F0KHQpO2lmKGUuaGFzQXR0cmlidXRlKHQpKXJldHVybiBlLmdldEF0dHJpYnV0ZSh0KX12YXIgcj1mdW5jdGlvbigpeyFmdW5jdGlvbih0LGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiIpO3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxlJiZoKHQsZSl9KG8saSgpKTt2YXIgdCxlLG4scj1kKG8pO2Z1bmN0aW9uIG8odCxlKXt2YXIgbjtyZXR1cm4gZnVuY3Rpb24odCl7aWYoISh0IGluc3RhbmNlb2YgbykpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIil9KHRoaXMpLChuPXIuY2FsbCh0aGlzKSkucmVzb2x2ZU9wdGlvbnMoZSksbi5saXN0ZW5DbGljayh0KSxufXJldHVybiB0PW8sbj1be2tleToiaXNTdXBwb3J0ZWQiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9MDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOlsiY29weSIsImN1dCJdLHQ9InN0cmluZyI9PXR5cGVvZiB0P1t0XTp0LGU9ISFkb2N1bWVudC5xdWVyeUNvbW1hbmRTdXBwb3J0ZWQ7cmV0dXJuIHQuZm9yRWFjaChmdW5jdGlvbih0KXtlPWUmJiEhZG9jdW1lbnQucXVlcnlDb21tYW5kU3VwcG9ydGVkKHQpfSksZX19XSwoZT1be2tleToicmVzb2x2ZU9wdGlvbnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9MDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9O3RoaXMuYWN0aW9uPSJmdW5jdGlvbiI9PXR5cGVvZiB0LmFjdGlvbj90LmFjdGlvbjp0aGlzLmRlZmF1bHRBY3Rpb24sdGhpcy50YXJnZXQ9ImZ1bmN0aW9uIj09dHlwZW9mIHQudGFyZ2V0P3QudGFyZ2V0OnRoaXMuZGVmYXVsdFRhcmdldCx0aGlzLnRleHQ9ImZ1bmN0aW9uIj09dHlwZW9mIHQudGV4dD90LnRleHQ6dGhpcy5kZWZhdWx0VGV4dCx0aGlzLmNvbnRhaW5lcj0ib2JqZWN0Ij09PXModC5jb250YWluZXIpP3QuY29udGFpbmVyOmRvY3VtZW50LmJvZHl9fSx7a2V5OiJsaXN0ZW5DbGljayIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0aGlzLmxpc3RlbmVyPWEoKSh0LCJjbGljayIsZnVuY3Rpb24odCl7cmV0dXJuIGUub25DbGljayh0KX0pfX0se2tleToib25DbGljayIsdmFsdWU6ZnVuY3Rpb24odCl7dD10LmRlbGVnYXRlVGFyZ2V0fHx0LmN1cnJlbnRUYXJnZXQ7dGhpcy5jbGlwYm9hcmRBY3Rpb24mJih0aGlzLmNsaXBib2FyZEFjdGlvbj1udWxsKSx0aGlzLmNsaXBib2FyZEFjdGlvbj1uZXcgbCh7YWN0aW9uOnRoaXMuYWN0aW9uKHQpLHRhcmdldDp0aGlzLnRhcmdldCh0KSx0ZXh0OnRoaXMudGV4dCh0KSxjb250YWluZXI6dGhpcy5jb250YWluZXIsdHJpZ2dlcjp0LGVtaXR0ZXI6dGhpc30pfX0se2tleToiZGVmYXVsdEFjdGlvbiIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHkoImFjdGlvbiIsdCl9fSx7a2V5OiJkZWZhdWx0VGFyZ2V0Iix2YWx1ZTpmdW5jdGlvbih0KXt0PXkoInRhcmdldCIsdCk7aWYodClyZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KX19LHtrZXk6ImRlZmF1bHRUZXh0Iix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4geSgidGV4dCIsdCl9fSx7a2V5OiJkZXN0cm95Iix2YWx1ZTpmdW5jdGlvbigpe3RoaXMubGlzdGVuZXIuZGVzdHJveSgpLHRoaXMuY2xpcGJvYXJkQWN0aW9uJiYodGhpcy5jbGlwYm9hcmRBY3Rpb24uZGVzdHJveSgpLHRoaXMuY2xpcGJvYXJkQWN0aW9uPW51bGwpfX1dKSYmZih0LnByb3RvdHlwZSxlKSxuJiZmKHQsbiksb30oKX0sODI4OmZ1bmN0aW9uKHQpe3ZhciBlOyJ1bmRlZmluZWQiPT10eXBlb2YgRWxlbWVudHx8RWxlbWVudC5wcm90b3R5cGUubWF0Y2hlc3x8KChlPUVsZW1lbnQucHJvdG90eXBlKS5tYXRjaGVzPWUubWF0Y2hlc1NlbGVjdG9yfHxlLm1vek1hdGNoZXNTZWxlY3Rvcnx8ZS5tc01hdGNoZXNTZWxlY3Rvcnx8ZS5vTWF0Y2hlc1NlbGVjdG9yfHxlLndlYmtpdE1hdGNoZXNTZWxlY3RvciksdC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7Zm9yKDt0JiY5IT09dC5ub2RlVHlwZTspe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiB0Lm1hdGNoZXMmJnQubWF0Y2hlcyhlKSlyZXR1cm4gdDt0PXQucGFyZW50Tm9kZX19fSw0Mzg6ZnVuY3Rpb24odCxlLG4pe3ZhciBhPW4oODI4KTtmdW5jdGlvbiBpKHQsZSxuLHIsbyl7dmFyIGk9ZnVuY3Rpb24oZSxuLHQscil7cmV0dXJuIGZ1bmN0aW9uKHQpe3QuZGVsZWdhdGVUYXJnZXQ9YSh0LnRhcmdldCxuKSx0LmRlbGVnYXRlVGFyZ2V0JiZyLmNhbGwoZSx0KX19LmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gdC5hZGRFdmVudExpc3RlbmVyKG4saSxvKSx7ZGVzdHJveTpmdW5jdGlvbigpe3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihuLGksbyl9fX10LmV4cG9ydHM9ZnVuY3Rpb24odCxlLG4scixvKXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdC5hZGRFdmVudExpc3RlbmVyP2kuYXBwbHkobnVsbCxhcmd1bWVudHMpOiJmdW5jdGlvbiI9PXR5cGVvZiBuP2kuYmluZChudWxsLGRvY3VtZW50KS5hcHBseShudWxsLGFyZ3VtZW50cyk6KCJzdHJpbmciPT10eXBlb2YgdCYmKHQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0KSksQXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKHQsZnVuY3Rpb24odCl7cmV0dXJuIGkodCxlLG4scixvKX0pKX19LDg3OTpmdW5jdGlvbih0LG4pe24ubm9kZT1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwIT09dCYmdCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50JiYxPT09dC5ub2RlVHlwZX0sbi5ub2RlTGlzdD1mdW5jdGlvbih0KXt2YXIgZT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCk7cmV0dXJuIHZvaWQgMCE9PXQmJigiW29iamVjdCBOb2RlTGlzdF0iPT09ZXx8IltvYmplY3QgSFRNTENvbGxlY3Rpb25dIj09PWUpJiYibGVuZ3RoImluIHQmJigwPT09dC5sZW5ndGh8fG4ubm9kZSh0WzBdKSl9LG4uc3RyaW5nPWZ1bmN0aW9uKHQpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdHx8dCBpbnN0YW5jZW9mIFN0cmluZ30sbi5mbj1mdW5jdGlvbih0KXtyZXR1cm4iW29iamVjdCBGdW5jdGlvbl0iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfX0sMzcwOmZ1bmN0aW9uKHQsZSxuKXt2YXIgbD1uKDg3OSkscz1uKDQzOCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuKXtpZighdCYmIWUmJiFuKXRocm93IG5ldyBFcnJvcigiTWlzc2luZyByZXF1aXJlZCBhcmd1bWVudHMiKTtpZighbC5zdHJpbmcoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBTdHJpbmciKTtpZighbC5mbihuKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJUaGlyZCBhcmd1bWVudCBtdXN0IGJlIGEgRnVuY3Rpb24iKTtpZihsLm5vZGUodCkpcmV0dXJuIGM9ZSx1PW4sKGE9dCkuYWRkRXZlbnRMaXN0ZW5lcihjLHUpLHtkZXN0cm95OmZ1bmN0aW9uKCl7YS5yZW1vdmVFdmVudExpc3RlbmVyKGMsdSl9fTtpZihsLm5vZGVMaXN0KHQpKXJldHVybiByPXQsbz1lLGk9bixBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKHIsZnVuY3Rpb24odCl7dC5hZGRFdmVudExpc3RlbmVyKG8saSl9KSx7ZGVzdHJveTpmdW5jdGlvbigpe0FycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwocixmdW5jdGlvbih0KXt0LnJlbW92ZUV2ZW50TGlzdGVuZXIobyxpKX0pfX07aWYobC5zdHJpbmcodCkpcmV0dXJuIHQ9dCxlPWUsbj1uLHMoZG9jdW1lbnQuYm9keSx0LGUsbik7dGhyb3cgbmV3IFR5cGVFcnJvcigiRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIFN0cmluZywgSFRNTEVsZW1lbnQsIEhUTUxDb2xsZWN0aW9uLCBvciBOb2RlTGlzdCIpO3ZhciByLG8saSxhLGMsdX19LDgxNzpmdW5jdGlvbih0KXt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIGUsbj0iU0VMRUNUIj09PXQubm9kZU5hbWU/KHQuZm9jdXMoKSx0LnZhbHVlKToiSU5QVVQiPT09dC5ub2RlTmFtZXx8IlRFWFRBUkVBIj09PXQubm9kZU5hbWU/KChlPXQuaGFzQXR0cmlidXRlKCJyZWFkb25seSIpKXx8dC5zZXRBdHRyaWJ1dGUoInJlYWRvbmx5IiwiIiksdC5zZWxlY3QoKSx0LnNldFNlbGVjdGlvblJhbmdlKDAsdC52YWx1ZS5sZW5ndGgpLGV8fHQucmVtb3ZlQXR0cmlidXRlKCJyZWFkb25seSIpLHQudmFsdWUpOih0Lmhhc0F0dHJpYnV0ZSgiY29udGVudGVkaXRhYmxlIikmJnQuZm9jdXMoKSxuPXdpbmRvdy5nZXRTZWxlY3Rpb24oKSwoZT1kb2N1bWVudC5jcmVhdGVSYW5nZSgpKS5zZWxlY3ROb2RlQ29udGVudHModCksbi5yZW1vdmVBbGxSYW5nZXMoKSxuLmFkZFJhbmdlKGUpLG4udG9TdHJpbmcoKSk7cmV0dXJuIG59fSwyNzk6ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe31lLnByb3RvdHlwZT17b246ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXMuZXx8KHRoaXMuZT17fSk7cmV0dXJuKHJbdF18fChyW3RdPVtdKSkucHVzaCh7Zm46ZSxjdHg6bn0pLHRoaXN9LG9uY2U6ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXM7ZnVuY3Rpb24gbygpe3Iub2ZmKHQsbyksZS5hcHBseShuLGFyZ3VtZW50cyl9cmV0dXJuIG8uXz1lLHRoaXMub24odCxvLG4pfSxlbWl0OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSxuPSgodGhpcy5lfHwodGhpcy5lPXt9KSlbdF18fFtdKS5zbGljZSgpLHI9MCxvPW4ubGVuZ3RoO3I8bztyKyspbltyXS5mbi5hcHBseShuW3JdLmN0eCxlKTtyZXR1cm4gdGhpc30sb2ZmOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5lfHwodGhpcy5lPXt9KSxyPW5bdF0sbz1bXTtpZihyJiZlKWZvcih2YXIgaT0wLGE9ci5sZW5ndGg7aTxhO2krKylyW2ldLmZuIT09ZSYmcltpXS5mbi5fIT09ZSYmby5wdXNoKHJbaV0pO3JldHVybiBvLmxlbmd0aD9uW3RdPW86ZGVsZXRlIG5bdF0sdGhpc319LHQuZXhwb3J0cz1lLHQuZXhwb3J0cy5UaW55RW1pdHRlcj1lfX0sbz17fSxyLm49ZnVuY3Rpb24odCl7dmFyIGU9dCYmdC5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIHQuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gdH07cmV0dXJuIHIuZChlLHthOmV9KSxlfSxyLmQ9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlyLm8oZSxuKSYmIXIubyh0LG4pJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxuLHtlbnVtZXJhYmxlOiEwLGdldDplW25dfSl9LHIubz1mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX0scigxMzQpLmRlZmF1bHQ7ZnVuY3Rpb24gcih0KXtpZihvW3RdKXJldHVybiBvW3RdLmV4cG9ydHM7dmFyIGU9b1t0XT17ZXhwb3J0czp7fX07cmV0dXJuIG5bdF0oZSxlLmV4cG9ydHMsciksZS5leHBvcnRzfXZhciBuLG99KTs="}]},{"name":"文库下载器","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://wenku.baidu.com/view/*","*://wenku.baidu.com/tfview/*","*://wenku.baidu.com/link?url*","*://wenku.baidu.com/share/*","*://www.doc88.com/p-*","*://www.docin.com/p-*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1670681491143,"data":{}},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/437609-%E6%96%87%E5%BA%93%E4%B8%8B%E8%BD%BD%E5%99%A8/code/%E6%96%87%E5%BA%93%E4%B8%8B%E8%BD%BD%E5%99%A8.user.js","uuid":"9588c264-1bf9-42eb-b8e5-bb0f0d7a557f","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.bootcss.com/jquery/3.5.1/jquery.min.js","ts":1670681491080,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jspdf.umd.min.js","url":"https://cdn.staticfile.org/jspdf/2.5.1/jspdf.umd.min.js","ts":1670681491096,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"html2canvas.min.js","url":"https://cdn.staticfile.org/html2canvas/1.4.1/html2canvas.min.js","ts":1670681491103,"mimetype":"text/javascript"},"source":""}]},{"name":"网页限制解除(改)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["eemm.me"],"orig_excludes":["*www.bilibili.com/video*","*www.bilibili.com/v*","*www.bilibili.com/s/*","*www.bilibili.com/bangumi*","https://www.bilibili.com/medialist/play/*","*www.youtube.com/watch*","*www.panda.tv*","*www.github.com*","https://lanhuapp.com/*","https://www.douyu.com/*","https://www.zhihu.com/signin?*","https://tieba.baidu.com/*","https://v.qq.com/*","*.taobao.com/*","*tmall.com*","*signin*"],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1670681491166,"data":{"rwl_userData":"o{\"status\": 1,\"version\": 0.1,\"message\": \"Ã¥ÂÂ¦Ã¥ÂÂ¦Ã¥ÂÂ¦,Ã¥ÂÂ¦Ã¥ÂÂ¦Ã¥ÂÂ¦,Ã¦ÂÂÃ¦ÂÂ¯Ã¥ÂÂÃ¦ÂÂ¥Ã§ÂÂÃ¥Â°ÂÃ¨Â¡ÂÃ¥Â®Â¶\",\"positionTop\": 32,\"positionLeft\": 0,\"positionRight\": \"auto\",\"addBtn\": true,\"connectToTheServer\": false,\"waitUpload\": [\"codeberg.org\"],\"currentURL\": \"https://codeberg.org/attachments/36e750cc-e7b0-4a19-a985-22ffce164a2b\",\"shortcut\": 3,\"rules\": {\"rule_def\": {\"name\": \"default\",\"hook_eventNames\": \"contextmenu|select|selectstart|copy|cut|dragstart|mousemove|beforeunload\",\"unhook_eventNames\": \"mousedown|mouseup|keydown|keyup\",\"dom0\": true,\"hook_addEventListener\": true,\"hook_preventDefault\": true,\"hook_set_returnValue\": true,\"add_css\": true},\"rule_plus\": {\"name\": \"default\",\"hook_eventNames\": \"contextmenu|select|selectstart|copy|cut|dragstart|mousedown|mouseup|mousemove|beforeunload\",\"unhook_eventNames\": \"keydown|keyup\",\"dom0\": true,\"hook_addEventListener\": true,\"hook_preventDefault\": true,\"hook_set_returnValue\": true,\"add_css\": true},\"rule_zhihu\": {\"name\": \"default\",\"hook_eventNames\": \"contextmenu|select|selectstart|copy|cut|dragstart|mousemove\",\"unhook_eventNames\": \"keydown|keyup\",\"dom0\": true,\"hook_addEventListener\": true,\"hook_preventDefault\": true,\"hook_set_returnValue\": true,\"add_css\": true}},\"data\": [\"b.faloo.com\",\"bbs.coocaa.com\",\"book.hjsm.tom.com\",\"book.zhulang.com\",\"book.zongheng.com\",\"chokstick.com\",\"chuangshi.qq.com\",\"city.udn.com\",\"cutelisa55.pixnet.net\",\"huayu.baidu.com\",\"imac.hk\",\"life.tw\",\"luxmuscles.com\",\"news.missevan.com\",\"read.qidian.com\",\"www.15yan.com\",\"www.17k.com\",\"www.18183.com\",\"www.360doc.com\",\"www.coco01.net\",\"www.eyu.com\",\"www.hongshu.com\",\"www.hongxiu.com\",\"www.imooc.com\",\"www.jjwxc.net\",\"www.readnovel.com\",\"www.tadu.com\",\"www.xxsy.net\",\"www.z3z4.com\",\"www.zhihu.com\",\"yuedu.163.com\",\"www.ppkao.com\",\"movie.douban.com\",\"www.ruiwen.com\",\"vipreader.qidian.com\",\"www.pigai.org\",\"www.shangc.net\",\"www.myhtlmebook.com\",\"www.yuque.com\",\"www.longmabookcn.com\",\"www.alphapolis.co.jp\",\"www.sdifen.com\",\"votetw.com\",\"boke112.com\",\"www.myhtebooks.com\",\"www.xiegw.cn\",\"chuangshi.qq.com\",\"www.uta-net.com\",\"www.bimiacg.net\"]}"}},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/28497-%E7%BD%91%E9%A1%B5%E9%99%90%E5%88%B6%E8%A7%A3%E9%99%A4-%E6%94%B9/code/Remove%20web%20limits(modified).user.js","uuid":"43ea5bb0-ab5f-4e35-8b67-ff6ad2e23fac","source":""},{"name":"懒人专用，全网VIP视频免费破解去广告、全网音乐直接下载、知乎增强、短视频无水印下载、百度网盘直接下载等多功能工具箱，功能可独立开关。长期更新，放心使用。v6","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["d.pcs.baidu.com","baidu.com","baidupcs.com","youxiaohou.com","localhost","iesdouyin.com","47.99.158.118"],"orig_excludes":["*://*.bilibili.com/bangumi/*","*://*.zhmdy.top/*","*://*.eggvod.cn/*"],"orig_includes":[],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/disk/main*","*://yun.baidu.com/disk/main*","*://pan.baidu.com/s*","*://yun.baidu.com/s*","*://*.youku.com/*","*://*.iqiyi.com/*","*://*.iq.com/*","*://*.le.com/*","*://v.qq.com/*","*://m.v.qq.com/*","*://*.tudou.com/*","*://*.mgtv.com/*","*://tv.sohu.com/*","*://film.sohu.com/*","*://*.1905.com/*","*://*.bilibili.com/*","*://*.pptv.com/*","*://item.taobao.com/*","*://s.taobao.com/*","*://chaoshi.detail.tmall.com/*","*://detail.tmall.com/*","*://detail.tmall.hk/*","*://item.jd.com/*","*://*.yiyaojd.com/*","*://*.liangxinyao.com/*","*://music.163.com/*","*://y.qq.com/*","*://*.kugou.com/*","*://*.kuwo.cn/*","*://*.ximalaya.com/*","*://*.zhihu.com/*","*://*.douyin.com/*","*://*.kuaishou.com/*","*://*.ixigua.com/*","*://*.youtube.com/*","*://47.99.158.118/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1670681491201,"data":{}},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/370634-%E6%87%92%E4%BA%BA%E4%B8%93%E7%94%A8-%E5%85%A8%E7%BD%91vip%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A-%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD-%E7%9F%A5%E4%B9%8E%E5%A2%9E%E5%BC%BA-%E7%9F%AD%E8%A7%86%E9%A2%91%E6%97%A0%E6%B0%B4%E5%8D%B0%E4%B8%8B%E8%BD%BD-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E7%AD%89%E5%A4%9A%E5%8A%9F%E8%83%BD%E5%B7%A5%E5%85%B7%E7%AE%B1-%E5%8A%9F%E8%83%BD%E5%8F%AF%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%85%B3-%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0-%E6%94%BE%E5%BF%83%E4%BD%BF%E7%94%A8-v6/code/%E6%87%92%E4%BA%BA%E4%B8%93%E7%94%A8%EF%BC%8C%E5%85%A8%E7%BD%91VIP%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A%E3%80%81%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E3%80%81%E7%9F%A5%E4%B9%8E%E5%A2%9E%E5%BC%BA%E3%80%81%E7%9F%AD%E8%A7%86%E9%A2%91%E6%97%A0%E6%B0%B4%E5%8D%B0%E4%B8%8B%E8%BD%BD%E3%80%81%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E7%AD%89%E5%A4%9A%E5%8A%9F%E8%83%BD%E5%B7%A5%E5%85%B7%E7%AE%B1%EF%BC%8C%E5%8A%9F%E8%83%BD%E5%8F%AF%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%85%B3%E3%80%82%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%8C%E6%94%BE%E5%BF%83%E4%BD%BF%E7%94%A8%E3%80%82v6.user.js","uuid":"9a8d58a7-88b5-40d5-b184-7cc12fa8db6e","source":"","requires":[{"meta":{"name":"crypto-js.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/crypto-js/4.1.1/crypto-js.min.js","ts":1670681491171,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"sweetalert2.all.min.js","url":"https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/limonte-sweetalert2/11.4.4/sweetalert2.all.min.js","ts":1670681491176,"mimetype":"text/javascript"},"source":""}]},{"name":"HTML5视频播放工具","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["https://user.qzone.qq.com/*"],"orig_includes":["*/play*","*play/*"],"orig_matches":["https://*.qq.com/*","https://www.weiyun.com/video_*","https://v.youku.com/v_show/id_*","https://vku.youku.com/live/*","https://video.tudou.com/v/*","https://www.iqiyi.com/*","https://live.bilibili.com/*","https://www.bilibili.com/*","https://www.ixigua.com/*","https://www.toutiao.com/video/*","https://www.acfun.cn/*","https://live.acfun.cn/live/*","http://v.pptv.com/show/*","https://v.pptv.com/show/*","https://www.miguvideo.com/*","https://tv.sohu.com/*","https://film.sohu.com/album/*","https://www.mgtv.com/*","https://pan.baidu.com/*","https://yun.baidu.com/*","https://*.163.com/*","https://*.icourse163.org/*","http://video.sina.*/*","https://video.sina.*/*","http://k.sina.*/*","https://k.sina.*/*","https://weibo.com/*","https://*.weibo.com/*","https://pan.baidu.com/*","https://yun.baidu.com/*","http://v.ifeng.com/*","https://v.ifeng.com/*","http://news.mtime.com/*","http://video.mtime.com/*","https://www.youtube.com/watch*","https://www.ted.com/talks/*","https://www.yy.com/*","https://www.huya.com/*","https://v.douyu.com/*","https://www.douyu.com/*","https://live.douyin.com/*","https://www.douyin.com/*","https://www.longzhu.com/*","https://www.zhanqi.tv/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1670681491221,"data":{}},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/30545-html5%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%B7%A5%E5%85%B7/code/HTML5%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%B7%A5%E5%85%B7.user.js","uuid":"6676f792-13a6-4e2c-ba46-561f7cb15f80","source":"","requires":[{"meta":{"name":"vue.min.js","url":"https://cdn.staticfile.org/vue/2.6.11/vue.min.js","ts":1670681491206,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery.min.js","url":"https://cdn.staticfile.org/jquery/3.6.0/jquery.min.js","ts":1670681491209,"mimetype":"text/javascript"},"source":""}]},{"name":"移除Google的搜索结果重定向，包括其图片搜索","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["https://www.google.*","https://prism-kangaroo.glitch.me/search?*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1670681491222,"data":{}},"enabled":true,"position":7,"file_url":"https://greasyfork.org/scripts/19713-%E7%A7%BB%E9%99%A4google%E7%9A%84%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E9%87%8D%E5%AE%9A%E5%90%91-%E5%8C%85%E6%8B%AC%E5%85%B6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2/code/%E7%A7%BB%E9%99%A4Google%E7%9A%84%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E9%87%8D%E5%AE%9A%E5%90%91%EF%BC%8C%E5%8C%85%E6%8B%AC%E5%85%B6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2.user.js","uuid":"46c08c7b-b24c-4710-a9b5-13d175e3528c","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIOenu+mZpEdvb2dsZeeahOaQnOe0oue7k+aenOmHjeWumuWQke+8jOWMheaLrOWFtuWbvueJh+aQnOe0ogovLyBAbmFtZXNwYWNlICAgICAgZ29vZ2xlLmNvbS54aW5nZ3NmCi8vIEBkZXNjcmlwdGlvbiAgICBSZW1vdmUgYWxsIGxpbmsgcmVkaXJlY3Rpb24gb24gR29vZ2xlIFNlYXJjaCBSZXN1bHRzLGFuZCBHb29nbGUgaW1hZ2UgU2VhcmNoIQovLyBAaG9tZXBhZ2VVUkwgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzE5NzEzCi8vIEBpbmNsdWRlICAgICAgICBodHRwczovL3d3dy5nb29nbGUuKgovLyBAaW5jbHVkZSAgICAgICAgaHR0cHM6Ly9wcmlzbS1rYW5nYXJvby5nbGl0Y2gubWUvc2VhcmNoPyoKLy8gQGdyYW50ICAgICAgICAgIG5vbmUKLy8gQHZlcnNpb24gICAgICAgIDIwMTkuMTEuMTEKLy8gPT0vVXNlclNjcmlwdD09CgptYWluLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGV2ID0+IHsvL+WbvueJh+aQnOe0ogoJaWYgKGV2LnRhcmdldC5jbG9zZXN0KCdhW2pzYWN0aW9uXj0ibW91c2Vkb3duOmlyYy4iXSA+IGltZycpKSBldi5zdG9wUHJvcGFnYXRpb24oKTsKfSk7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdyd3QnLCB7IHdyaXRhYmxlOiBmYWxzZSB9KTs="}],"settings":{"script_blacklist_server":[{"rules":["/https?:\\/\\/userscripts\\.org\\/scripts\\/(source|version)/(102614).*\\.user\\.js/"],"severity":2},{"name":"SaveFrom.net helper","reason":"Shows advertisements","rules":["/https?:\\/\\/sf-addon\\.com\\/.*\\/.*\\.user\\.js/","/https?:\\/\\/.*\\.sf-helper\\.com\\/.*\\.user\\.js/"],"severity":3},{"reasons":{"en":"Used for a phishing compain to compromise users of baon-nutrition.com"},"rules":["/https?:\\/\\/files\\.ulysse\\.travel\\/.*\\.user\\.js/"],"severity":8},{"name":"Local YouTube Downloader","reasons":{"en":"Shows a disturbing alert message at every page with a youtube frame or iframe"},"rules":["/https?:\\/\\/greasyfork\\.org\\/scripts\\/369400-.*\\.user\\.js.*/"],"severity":8}],"userscript_search_mode":"badge"}}